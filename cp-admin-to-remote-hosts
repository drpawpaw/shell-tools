#!/bin/bash

# Copies a file not owned by you to the same file path location on one or more
# remote hosts, retaining the same owner, group, timestamps and rwx props on
# the remote hosts. If the file exists on a remote host and 'backup-timestamp'
# is on its root's PATH, then it's backed up before being overwritten. Requires
# sudo access on the local and remote hosts. Run it as you, not sudo.

# Copyright (C) 2020 drpawpaw. All Rights Reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -z "$2" ]
then
    echo -e "\nUsage: $ ${0##*/} {admin file to copy}" \
                                "{remote ssh host to copy it to}..."
    exit 1
fi

echo -en "\n$( hostname -s ): "
file="$1"
owner=$( sudo stat --format=%u "$file" )
owner=$( id -a $owner | cut -d '(' -f2 | cut -d ')' -f1 )
if [ -z "$owner" ]
then
    echo -e "\nFailed to determine file's owner: $file"
    exit 1
fi

grp=$( sudo stat --format=%g "$file" )
grp=$( id -a $grp | cut -d '(' -f3 | cut -d ')' -f1 )
if [ -z "$grp" ]
then
    echo -e "\nFailed to determine file's group: $file"
    exit 1
fi

echo "$owner:$grp owns $file"

sudo cp -pv "$file" "$HOME"
fileSimple=${file##*/}
sudo chown -v $USER:$USER "$HOME/$fileSimple"
ls -l "$HOME/$fileSimple"

shift 1
for h in "$@"
do
    echo -e "\n-------------- ${h} --------------"
    scp -p -o IdentitiesOnly=true "$HOME/$fileSimple" ${h}:./
    ssh -t -o IdentitiesOnly=true $h -- "ls -l ./\"$fileSimple\"
                            sudo chown -v $owner:$grp ./\"$fileSimple\"
                            [ -f \"$file\" ] && \\
                                             sudo which backup-timestamp && \\
                                             sudo backup-timestamp \"$file\"
                            sudo cp -pv ./\"$fileSimple\" \"$file\"
                            sudo ls -l \"$file\"*
                            rm -fv ./\"$fileSimple\""
done

echo -en "\n$( hostname -s ): "
rm -fv "$HOME/$fileSimple"

