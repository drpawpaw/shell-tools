#!/bin/bash

# Starts a GUI on a remote host that displays in local host's X Windows.
# Assumes user's local host .ssh/config contains an entry for the remote
# host that defines a nickname.

conType=-X
if [ '-Y' = "$1" ]
then
    conType=$1
    shift 1
fi

if [ -z "$1" ] || [ -z "$2" ]
then
    echo -e "\nUsage: $ ${0##*/} {remote-ssh-host-nickame} {gui app to start}"
    exit 1
fi

# TODO: Add SSH agent SOCK check here. If none, create one: ssh-agent -s

simple=$( echo "${2##*/}" | sed -r "s/ .*//" )
out="$HOME"/.x-$1-$simple.out

ssh $1 -- exit  # Provides an SSH private key password prompt that does not
                # echo clear-text password chars, which the nohup below does.
                # This assumes an ssh-agent is running that will capture the
                # password and thus avoid another (and clear-text echoing)
                # password prompt when calling the actual command just below.
                # Works best if AddKeysToAgent is 'yes' in /etc/ssh_config.
echo
echo "$ nohup ssh -v $conType $1 -- $2 &>\"$out\" &"
nohup ssh -v $conType $1 -- $2 &>"$out" &

touch "$out"
chmod go-rwx "$out"
echo -e "\nstdout/err -> $out"

