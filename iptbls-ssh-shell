#!/bin/bash

# Copyright (C) 2020 drpawpaw. All Rights Reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


# See top of script iptbls-open-hole for usage info of this script.

# TODO: Add optional SSH server host/IP argument.

# TODO: Add optional setting of ssh server's port.

# Do NOT launch iptbls-open-hole as sudo, because if done AND this script is
# also launched as sudo, then SUDO_USER within iptbls-open-hole is root!
# It's unlikely anyone would ever want SUDO_USER=root.

if [ 0 != $(id -u) ] || [ -z "$SUDO_USER" ]
then
    echo -e "\n${0##*/} only runs as sudo root.\n"
    exit 1
fi

userHome=$( cat /etc/passwd | grep -E "^$SUDO_USER:" | cut -d : -f6 )
TF=$( sudo -u $SUDO_USER mktemp )
echo ". $userHome/.bashrc"                              > "$TF"
echo "PS1='\n$SUDO_USER ${0##*/} \$( pwd )\nssh:22> '" >> "$TF"
echo "echo -e '\033]2;'ssh:22 ${0##*/}'\007'"          >> "$TF"
echo "cd $PWD"                                         >> "$TF"
echo "env | grep SSH"                                  >> "$TF"


iptbls-open-hole -a o -d o -p t -n 22
trap "iptbls-open-hole -a c -d o -p t -n 22" \
                          SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGFPE SIGTERM
                         #  1      2       3      4       6      8      15

sudo --login -u $SUDO_USER ssh-agent bash --rcfile "$TF"

rm -f "$TF"
iptbls-open-hole -a c -d o -p t -n 22

